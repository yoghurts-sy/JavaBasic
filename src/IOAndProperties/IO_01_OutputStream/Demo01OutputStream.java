package IOAndProperties.IO_01_OutputStream;

import java.io.FileOutputStream;
import java.io.IOException;

/** java.io.OutputStream:字节输出流
 *      此抽象类是表示输出字节流的所有类的超类
 *
 *  定义了一些子类共性的成员方法：
 *      * `public void close()` ：关闭此输出流并释放与此流相关联的任何系统资源。
 *      * `public void flush() ` ：刷新此输出流并强制任何缓冲的输出字节被写出。
 *      * `public void write(byte[] b)`：将 b.length字节从指定的字节数组写入此输出流。
 *      * `public void write(byte[] b, int off, int len)` ：从指定的字节数组写入 len字节，从偏移量 off开始输出到此输出流。
 *      * `public abstract void write(int b)` ：将指定的字节输出流。
 *
 *  java.io.FileOutputStream extends OutputStream
 *  FileOutputStream：文件字节输出流
 *      作用：
 *          把内存的数据写入到硬盘的文件中
 *      构造方法：
 *          FileOutputStream(String name)创建一个向具有指定名称的文件中写入数据的输出文件流。
 *          FileOutputStream(File file)创建一个向指定File对象表示的文件中写入数据的文件输出流
 *      参数：
 *          写入数据的目的地
 *          String name：目的地是一个文件的路径
 *          File file：目的地是一个文件
 *      构造方法的作用：
 *          1.创建一个FileOutputStream对象
 *          2.会根据构造方法中传递的文件/文件路径，创建一个空的文件
 *          3.会把FileOutputStream对象指向创建好的文件
 *
 *      写入数据的原理（内存-->硬盘）：
 *          java程序-->jvm（java虚拟机）-->os（操作系统）-->os（调用写数据的方法）-->把数据写入文件中
 *
 *      字符输出流的使用步骤：
 *          1.创建一个FileOutputStream对象，构造方法中传递写入文件的目的地
 *          2.调用FileOutputStream中的方法，把数据写入文件中
 *          3.释放资源（提高程序的效率）
 */
public class Demo01OutputStream {
    public static void main(String[] args) throws IOException /*Alt + enter */ {
        //会创建一个空的文件
        FileOutputStream fos = new FileOutputStream("C:\\Users\\yoghurts\\IDEA_WorkSpace\\com.java.basic\\src\\IOAndFile\\OutputStream\\a.txt");
        fos.write(97);
        fos.close();
        /** 写数据的时候会把10进制的整数97转换位二进制整数97
         *  fos.write(1100001):97-->1100001
         *  但为什么不是得到97？
         *      任意的文本编辑器（记事本，notepad++...）
         *      在打开文件的时候，都会查询编码表，把字节转换位字符
         *      如果是：
         *          0~127：查询ASCⅡ表（97-->a）
         *          其他：查询系统默认码表（如中文系统GBK）
         */
    }
}
